           PROGRAM              COMMENTS                                                         HEX CODE 
1.  main:
2.         MOV R0, #0           ; R0 = 0                                                          E3A00000
3.         MOV R1, #5           ; R1 = 5                                                          E3A01005
4.         MOV R2, #12          ; R2 = 12                                                         E3A0200C
5.         MOV R3, #15          ; R3 = 15                                                         E3A0300F
6.         MOV R4, #15          ; R4 = 15                                                         E3A0400F
7.         MOV R5, #1           ; R5 = 1                                                          E3A05001
8.         ADD R6, R0, R1       ; R6 = R0 + R1 = 0 + 5 = 5                                        E0806001
9.         SUB R7, R2, #9       ; R7 = R2 – 9 = 12 – 9 = 3                                        E2427009
10.        AND R8, R6, R7       ; R8 = R6 AND R7 = 5 AND 3 = 1                                    E0068007
11.        ADD R8, R8, R7       ; R8 = R8 + R7 = 1 + 3 = 4                                        E0888007
12.        CMP R8, #4           ; Compare R8 with 4, set Flags                                    E3580004
13.        EOR R9, R7, R8       ; R9 = R7 XOR R8 = 3 XOR 4 = 7                                    E0279008
14.        MOV R10, #15         ; R10 = 15                                                        E3A0A00F
15.        MVN R11, R10         ; R11 = NOT R10 = 0xFFFFFFF0 = 4294967280                         E1E0B00A
16.        LSL R12, R11, #1     ; R12 = R11 << 1 = 0xFFFFFFE0 = 4294967264                        E1A0C08B
17.        ASR R13, R12, #4     ; R13 = R12 >> 4 = 0xFFFFFFFE = 4294967294                        E1A0D24C
18.        SUBS R14, R8, R6     ; R14 = R8 - R6 = 4 - 5 = -1, set Flags                           E058E006
19.        BEQ end              ; should not be taken (Z flag is 0)                               0A00000A
20.        SUBS R14, R2, R8     ; R14 = R2 - R8 = 12 - 4 = 8, set flags                           E052E008
21.        BGE end              ; should be taken (N flag is 0)                                   AA000000
22.        ADD R8, R0, #0       ; should be skipped                                               E2808000
23.
24. end:
25.        SUBS R8, R7, R1      ; R8 = R7 - R1 = 3 - 5 = -2, set Flags                            E0578001
26.        ADDLT R7, R8, #1     ; R7 = R8 + 1 = -2 + 1 = -1, should be taken (N flag is 1)        B2887001
27.        SUB R7, R7, R1       ; R7 = R7 - R1 = -1 - 5 = -6                                      E0477001
28.        STR R7, [R2, #84]    ; mem[R2+84] = mem[12+84] = mem[96] = R7 = -6                     E5827054
29.        LDR R1, [R0, #96]    ; R1 = mem[96+R0] = mem[96] = -6                                  E5901060
30.        ADD R15, R15, R0     ; PC = PC + 8 (skip next instruction)                             E08FF000
31.        ADD R2, R0, #14      ; should be skipped                                               E280200E
32.        ADDS R1, R1, #13     ; R1 = R1 + 13 = -6 + 13 = 7, set Flags                           E291100D
33.        STRVC R1, [R0, #100] ; mem[R0+100] = mem[100] = R1 = 7, should be taken (V flag is 0)  75801064
34.        BL main              ; always taken                                                    EBFFFFE0



